* { box-sizing: border-box; }

body {
    font-family: sans-serif;
    font-size: 0.825em;
    }

.photo {
	margin: 1em 0;
	}


/* for this example we're only scaling up if we have js */
.js .photo img {
	display: block;
	margin: 0 auto;
	width: 100%;
	}

	
/* hide the fallback links */
.js .photo *:not(img) {
	display: none;
	}


/* height fitting */

/* the future, wouldn't that be nice?
   as of april 2013 these styles will apply in zero browsers.
   
   see:
   http://dev.opera.com/articles/view/css3-object-fit-object-position/
   http://caniuse.com/object-fit
   http://caniuse.com/viewport-units
*/
.js.cssvhunit.object-fit .photo img {
	
	max-height: 90vh;
	-webkit-object-fit: contain;
	-moz-object-fit: contain;
	-ms-object-fit: contain;
	-o-object-fit: contain;
	object-fit: contain;

	}

/* the present */

/* fit-height.js adds a 'tall' class to .photos that are taller than 90% of the viewport.
   we then define explicit heights for every containing element in order to size these with a pct-based height.
   
   dosen't work in opera ):
   
*/

.no-cssvhunit html, .no-object-fit html,
.no-cssvhunit body, .no-object-fit body,
.no-cssvhunit article, .no-object-fit article {
	height: 100%;
}

.no-cssvhunit .tall, .no-object-fit .tall {
	height: 90%;
}

.no-cssvhunit .tall img, .no-object-fit .tall img {
	height: 100%;
	width: auto !important;
}
